"""detect_model_changes

Revision ID: 8db1da7e3926
Revises: 1ae1aa28e105
Create Date: 2025-03-06 12:19:26.982114

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8db1da7e3926'
down_revision = '1ae1aa28e105'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pictograms',
    sa.Column('word', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequence_groups',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sync_log',
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('entity_id', sa.Uuid(), nullable=False),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pictogram_categories',
    sa.Column('pictogram_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['pictogram_id'], ['pictograms.id'], ),
    sa.PrimaryKeyConstraint('pictogram_id', 'category_id')
    )
    op.create_table('sequences',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['sequence_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequence_items',
    sa.Column('sequence_id', sa.Uuid(), nullable=False),
    sa.Column('pictogram_id', sa.Uuid(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pictogram_id'], ['pictograms.id'], ),
    sa.ForeignKeyConstraint(['sequence_id'], ['sequences.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('ix_pictogram_category', table_name='pictogram')
    op.drop_index('ix_pictogram_language', table_name='pictogram')
    op.drop_index('ix_pictogram_name', table_name='pictogram')
    op.drop_table('pictogram')
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('categories_created_by_fkey', 'categories', type_='foreignkey')
    op.create_foreign_key(None, 'categories', 'user', ['created_by'], ['id'])
    # Aggiungiamo le colonne con un valore predefinito
    op.add_column('user', sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_constraint(None, 'categories', type_='foreignkey')
    op.create_foreign_key('categories_created_by_fkey', 'categories', 'user', ['created_by'], ['id'], ondelete='SET NULL')
    op.alter_column('categories', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('categories', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_table('pictogram',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('language', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pictogram_pkey')
    )
    op.create_index('ix_pictogram_name', 'pictogram', ['name'], unique=False)
    op.create_index('ix_pictogram_language', 'pictogram', ['language'], unique=False)
    op.create_index('ix_pictogram_category', 'pictogram', ['category'], unique=False)
    op.drop_table('sequence_items')
    op.drop_table('sequences')
    op.drop_table('pictogram_categories')
    op.drop_table('sync_log')
    op.drop_table('sequence_groups')
    op.drop_table('pictograms')
    # ### end Alembic commands ###
